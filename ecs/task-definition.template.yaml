Parameters:
  ClusterName:
    Description: The name of the ECS cluster
    Type: String
    Default: tcc-cluster
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: dev
  ApplicationName:
    Description: The name of the application
    Type: String
    Default: banking-accounts

Resources:
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ApplicationName}-${EnvironmentName}-task-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              ArnLike:
                aws:SourceArn: !Sub arn:${AWS::Partition}:ecs:${AWS::Region}:${AWS::AccountId}:*
              StringEquals:
                aws:SourceAccount: !Sub ${AWS::AccountId}

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - TaskRole
    Properties:
      Family: !Sub ${ApplicationName}-${EnvironmentName}
      Cpu: 256
      Memory: 400
      NetworkMode: host
      RuntimePlatform:
        CpuArchitecture: x86_64
        OperatingSystemFamily: LINUX
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
        - Name: !Sub ${ApplicationName}-${EnvironmentName}
          Image: 140023370685.dkr.ecr.us-east-2.amazonaws.com/banking-accounts:9888a1d4c15ace801f027d1d9fb73f0cceb2f5c1
          Cpu: 128
          Memory: 256
          PortMappings:
            - Name: !Sub ${ApplicationName}-${EnvironmentName}-8080-http
              ContainerPort: 8080
              HostPort: 8080
              Protocol: tcp
              AppProtocol: http
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -f http://localhost:8080/actuator/health || exit 1
            StartPeriod: 30
            Interval: 10
            Timeout: 10
            Retries: 10
          Essential: true
#          LogConfiguration:
#            LogDriver: awslogs
#            Options:
#              awslogs-create-group: true
#              awslogs-group: !Sub ${ApplicationName}-${EnvironmentName}
#              awslogs-region: !Sub ${AWS::Region}
#              awslogs-stream-prefix: !Sub ${ClusterName}
      ExecutionRoleArn:
       "Fn::ImportValue": !Sub ${ClusterName}-${EnvironmentName}-task-execution-role

Outputs:
  TaskDefinition:
    Description: The ARN of the task definition
    Value: !Ref TaskDefinition
    Export:
      Name: !Sub ${ApplicationName}-${EnvironmentName}-task-definition
  TaskRole:
    Description: The ARN of the IAM Role used by the task
    Value: !GetAtt TaskRole.Arn
