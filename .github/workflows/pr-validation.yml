name: Validate pull request

on:
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  pull-requests: write
  id-token: write

# TODO: Validar se changelog foi preenchido

jobs:
  build-and-test:
    uses: ./.github/workflows/build.yml
    with:
      java_version: 17

  quality-gate:
    uses: ./.github/workflows/quality-gate.yml

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    outputs:
      docker-image-tag: ${{ steps.export-docker-image-tag.outputs.tag }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::140023370685:role/banking-accounts-github-actions-role
          aws-region: us-east-2
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: target/
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Export Docker image tag
        id: export-docker-image-tag
        run: echo "tag=${{ steps.login-ecr.outputs.registry }}/banking-accounts:${{ github.sha }}" >> "$GITHUB_OUTPUT"
      - name: Build Docker image
        run: docker build -t ${{ steps.export-docker-image-tag.outputs.tag }} .
      - name: Push Docker image
        run: docker push ${{ steps.export-docker-image-tag.outputs.tag }}

  deploy-to-ecs:
    needs: docker-build
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::140023370685:role/banking-accounts-github-actions-role
          aws-region: us-east-2
      - name: echo docker tag
        run: echo "${{ needs.docker-build.outputs.docker-image-tag }}"
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .aws/task-definition.json
          container-name: banking-accounts-dev
          image: ${{ needs.docker-build.outputs.docker-image-tag }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: banking-accounts-dev
          cluster: tcc-cluster-dev
          wait-for-service-stability: true

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Run Dependabot security analysis
        uses: github/dependabot-action@v2
        with:
          open-pull-requests-limit: 10